2021-0426-01
SELECT
    COUNT(*) AS 사원수,
    ROUND(AVG(SALARY)) AS 평균급여
FROM
    HR.EMPLOYEES
;

SELECT
    B.DEPARTMENT_ID AS 부서코드,
    B.DEPARTMENT_NAME AS 부서명,
    SUM(A.SALARY) AS 급여합계
FROM
    HR.EMPLOYEES A LEFT JOIN
    HR.DEPARTMENTS B ON A.DEPARTMENT_ID = B.DEPARTMENT_ID 
GROUP BY 
    B.DEPARTMENT_ID,B.DEPARTMENT_NAME
order by 1
    ;
    
SELECT
    BUY_PROD AS 제품코드, 
    SUM(BUY_QTY) AS 매입수량합, 
    SUM(BUY_QTY*BUY_COST) AS 매입금액합
FROM
    BUYPROD
WHERE
    BUY_DATE BETWEEN '20050101' AND '20050331'
GROUP BY
    BUY_PROD
ORDER BY 1
;

SELECT
    A.CART_MEMBER AS 회원번호, 
    B.MEM_NAME AS 회원명, 
    SUM(A.CART_QTY) AS 구매수량합계, 
    SUM(A.CART_QTY * C.PROD_PRICE)구매금액합계
FROM
    CART A RIGHT JOIN 
    MEMBER B ON A.CART_MEMBER = B.MEM_ID RIGHT JOIN
    PROD C ON A.CART_PROD = C.PROD_ID
WHERE
    A.CART_NO LIKE '200505%'
GROUP BY 
    A.CART_MEMBER, B.MEM_NAME
ORDER BY 1
;

SELECT
    A.CART_MEMBER AS 회원번호, 
    B.MEM_NAME AS 회원명, 
    SUM(A.CART_QTY) AS 구매수량합계, 
    SUM(A.CART_QTY * C.PROD_PRICE)구매금액합계
FROM
    CART A, MEMBER B, PROD C
WHERE
        A.CART_MEMBER = B.MEM_ID -- 조인조건 --CART와 MEMBER, CART와,PROD
    AND A.CART_PROD = C.PROD_ID  -- 조인조건 --각각 테이블이 같이 가지는 데이터가 
    AND A.CART_NO LIKE '200505%' -- 일반조건 --필요하기 때문에 INNER JOIN사용
GROUP BY                         -- INNER JOIN은 생략 가능 하고 ON이 아닌
    A.CART_MEMBER, B.MEM_NAME    -- WHERE절에 조건을 넣어도 같을 결과가 나온다.
ORDER BY 1
;



SELECT
    SUBSTR(MEM_ADD1,1,2) AS 거주지,
    SUM(MEM_MILEAGE) AS 마일리지합계
FROM 
    MEMBER
GROUP BY 
    SUBSTR(MEM_ADD1,1,2)
;

SELECT
    CASE WHEN
    SUBSTR(MEM_REGNO2,1,1)='1' OR SUBSTR(MEM_REGNO2,1,1)='3'
    THEN '남성' ELSE '여성' END AS 성별,
    SUM(MEM_MILEAGE) AS 마일리지
FROM
    MEMBER
GROUP BY
    CASE WHEN
    SUBSTR(MEM_REGNO2,1,1)='1' OR SUBSTR(MEM_REGNO2,1,1)='3'
    THEN '남성' ELSE '여성' END
;


SELECT
    ROUND(AVG(SALARY))
FROM
    HR.EMPLOYEES
; -- 테이블 전체를 그룹으로 묶었기 때문에 GROUP BY나 다른 컬럼을 사용하면 안된다.

SELECT
    DEPARTMENT_ID AS 부서코드,
    ROUND(AVG(SALARY)) AS 평균급여
FROM 
    HR.EMPLOYEES
GROUP BY DEPARTMENT_ID
;

SELECT
    AVG(CART_
FROM
    CART
WHERE
;

SELECT
    A.BUY_PROD AS 상품코드,
    B.PROD_NAME AS 상품명,
    SUM(A.BUY_QTY) AS 매입수량,
    SUM(A.BUY_QTY*A.BUY_COST) AS 매입금액합계
FROM
    BUYPROD A, PROD B
WHERE
    A.BUY_PROD = B.PROD_ID AND
    A.BUY_DATE BETWEEN '20050101' AND '20050630'
GROUP BY A.BUY_PROD, B.PROD_NAME
HAVING SUM(A.BUY_QTY*A.BUY_COST) >= 10000000 
ORDER BY 1
;

SELECT
    A.CART_MEMBER AS 회원코드,
    B.MEM_NAME AS 회원명,
    ROUND(AVG(A.CART_QTY*C.PROD_PRICE)) AS 평균구매금액
FROM
    CART A, MEMBER B, PROD C
WHERE
    B.MEM_ID = A.CART_MEMBER AND
    A.CART_PROD = C.PROD_ID AND
    A.CART_NO LIKE '2005%'
GROUP BY A.CART_MEMBER, B.MEM_NAME
ORDER BY 1
;

5) 사원테이블에서 부서별 평균급여를 계산하고 자기부서의 평균급여보다
많은 급여를 받는 사원을 조회하시오
Alias는 사원번호, 사원명, 부서코드, 급여, 부서평균급여

SELECT
    EMPLOYEE_ID AS 사원번호, 
    EMP_NAME AS 사원명, 
    DEPARTMENT_ID AS 부서코드, 
    SALARY AS 급여, 
    ROUND(AVG(SALARY)) AS 부서평균급여
FROM
    HR.EMPLOYEES
GROUP BY
    EMPLOYEE_ID,EMP_NAME,DEPARTMENT_ID,SALARY
HAVING
    SALARY >  AVG(SALARY)
ORDER BY 1
;

SELECT
    A.EMPLOYEE_ID AS 사원번호,
    A.EMP_NAME AS 사원명,
    A.DEPARTMENT_ID AS 부서코드,
    A.SALARY AS 급여,
    ROUND(AVG() AS 부서평균급여
FROM
    HR.EMPLOYEES A, HR.DEPARTMENTS B
WHERE
    A.DEPARTMENT_ID = B.DEPARTMENT_ID
GROUP BY  A.EMPLOYEE_ID,A.EMP_NAME, A.DEPARTMENT_ID,A.SALARY
ORDER BY 1
;


부서내의 사람들의 급여의 평균
SELECT
    DEPARTMENT_ID
FROM HR.EMPLOYEES A, HR.DEPARTMENTS B
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID
ORDER BY 1;




SELECT
    EXTRACT(YEAR FROM HIRE_DATE) AS 입사년도,
    COUNT(*) AS 사원수,
    ROUND(AVG(SALARY)) AS 평균급여
FROM
    HR.EMPLOYEES
WHERE
    ROWNUM <= 5              -- ORACLE의 실행순서에 의해서 FROM -> WHERE 실행되어
GROUP BY                    -- EMPLOYEES테이블에서 5행을 추출하고 SELECT절을 실행
    EXTRACT(YEAR FROM HIRE_DATE)-- 원하는 결과가 나오지 않음
ORDER BY 3 DESC
;
-- capital column(view의 행번호) = rownum
-- oracle은 top이 제공되지 않기 때문에 rownum 을 사용하여 상위,하위값을 조회


SELECT
    EXTRACT(YEAR FROM HIRE_DATE) AS 입사년도,
    COUNT(*) AS 사원수,
    ROUND(AVG(SALARY)) AS 평균급여,
    DENSE_RANK() OVER(ORDER BY ROUND(AVG(SALARY)) DESC) AS 등수
FROM
    HR.EMPLOYEES
GROUP BY                    
    EXTRACT(YEAR FROM HIRE_DATE)
;


SELECT
    EXTRACT(YEAR FROM HIRE_DATE) AS 입사년도,
    COUNT(*) AS 사원수,
    ROUND(AVG(SALARY)) AS 평균급여,
    ROW_NUMBER() OVER (ORDER BY ROUND(AVG(SALARY)) DESC) AS 등수
FROM
    HR.EMPLOYEES
GROUP BY                    
    EXTRACT(YEAR FROM HIRE_DATE)
;

SELECT
    EXTRACT(YEAR FROM HIRE_DATE) AS 입사년도,
    ROUND(AVG(SALARY)) AS 평균급여,
    RANK() OVER(PARTITION BY EXTRACT(YEAR FROM HIRE_DATE)
                ORDER BY EXTRACT ROUND(AVG(SALARY)) DESC) AS 등수
FROM
    HR.EMPLOYEES
GROUP BY                    
    EXTRACT(YEAR FROM HIRE_DATE)
;

SELECT
    EMPLOYEE_ID,
    EMP_NAME,
    DEPARTMENT_ID,
    SALARY,
    RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC)
    AS RANK
FROM
    HR.EMPLOYEES
ORDER BY 3;



SELECT 
    DEPARTMENT_ID AS 부서코드,
    COUNT(*) AS 부서별인원수1,
    COUNT(DEPARTMENT_ID) AS 부서별인원수2
FROM
    HR.EMPLOYEES
GROUP BY DEPARTMENT_ID
ORDER BY 1
;

SELECT
    BUY_PROD AS 제품코드,
    COUNT(*) AS 매입건수
FROM
    BUYPROD
WHERE
    BUY_DATE BETWEEN '20050101' AND '20051231'
GROUP BY
    BUY_PROD
ORDER BY 1
;

SELECT
    CART_MEMBER AS 회원코드,
    COUNT(DISTINCT CART_NO) AS 구매건수
FROM
    CART
WHERE
    CART_NO LIKE '2005%'
GROUP BY CART_MEMBER
ORDER BY 1
;

SELECT
    B.LPROD_GU AS 분류코드,
    COUNT(*) AS "상품의 수" 
FROM
    PROD A, LPROD B
WHERE
    A.PROD_LGU (+)= B.LPROD_GU
GROUP BY B.LPROD_GU
ORDER BY 1
; 
-- 결과 중 7~10번째 줄은 잘못 출력된 값(0이 되어야한다.)
-- COUNT() 함수에 '*'를 사용한 결과


SELECT
    B.LPROD_GU AS 분류코드,
    COUNT(A.PROD_ID) AS "상품의 수" 
FROM
    PROD A, LPROD B
WHERE
    A.PROD_LGU (+)= B.LPROD_GU
GROUP BY B.LPROD_GU
ORDER BY 1
; 
-- 외부 JOIN에서 COUNT() 함수 사용시 반드시 컬럼명을 매개변수로 사용해야 한다.
-- 보통 테이블의 PK를 입력한다.


SELECT
    B.LPROD_GU AS 분류코드,
    COUNT(A.PROD_ID) AS "상품의 수" 
FROM
    PROD A RIGHT OUTER JOIN
    LPROD B ON A.PROD_LGU = B.LPROD_GU
GROUP BY B.LPROD_GU
ORDER BY 1
; 

SELECT
    CASE WHEN   
        SUBSTR(MEM_REGNO2,1,1) = '1' OR
        SUBSTR(MEM_REGNO2,1,1) = '3' THEN '남성'
    ELSE
        '여성' END AS 성별,
    MAX(MEM_MILEAGE) AS 마일리지 
FROM
    MEMBER
GROUP BY
    CASE WHEN   
        SUBSTR(MEM_REGNO2,1,1) = '1' OR
        SUBSTR(MEM_REGNO2,1,1) = '3' THEN '남성'
    ELSE
        '여성' END 
;

SELECT
    EMPLOYEE_ID AS 사원번호, 
    EMP_NAME AS 사원명, 
    A.DID AS 부서코드, 
    A.MSAL AS 급여
FROM
    (SELECT
        DEPARTMENT_ID AS DID,
        MAX(SALARY) AS MSAL
    FROM
        HR.EMPLOYEES
    GROUP BY DEPARTMENT_ID) A,
    HR.EMPLOYEES B
WHERE
    A.DID=B.DEPARTMENT_ID
    AND A.MSAL=B.SALARY
ORDER BY 3
;

SELECT
   *
FROM
    (SELECT
        DEPARTMENT_ID,
        MAX(SALARY)
    FROM
        HR.EMPLOYEES
    GROUP BY DEPARTMENT_ID) LEFT JOIN 
    HR.EMPLOYEES ON
    AND DID=B.DEPARTMENT_ID
;

SELECT
    *
FROM
    HR.EMPLOYEES INNER JOIN 
    (SELECT
        DEPARTMENT_ID AS DID,
        MAX(SALARY) AS MSAL
    FROM
        HR.EMPLOYEES
    GROUP BY DEPARTMENT_ID) ON
    DID=DEPARTMENT_ID
    AND MSAL=SALARY
;


2005년 5월 회원 중 가장 구매금액이 많은 회원번호, 회원명, 구매금액을 조회하시오
구매는 CART 테이블에서 조회해야함.
SELECT
    DISTINCT CART_MEMBER AS 회원번호, 
    MEM_NAME AS 회원명, 
    E.SCP AS 구매금액
FROM
    CART, MEMBER,
    (SELECT
        CART_MEMBER AS CMEM,
        SUM(CART_QTY*PROD_PRICE) AS SCP,
        DENSE_RANK() OVER(ORDER BY SUM(CART_QTY*PROD_PRICE) DESC) AS RANK
    FROM
        CART, PROD
    WHERE
        CART_PROD = PROD_ID AND
        CART_NO LIKE '200505%'
    GROUP BY CART_MEMBER) E
WHERE 
    CART_MEMBER = MEM_ID AND
    CART_MEMBER = E.CMEM AND
    E.RANK = 1
;




